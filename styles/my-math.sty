%%
%% Custom math shortcut package
%% Content:
%%  - A lot of useful shortcuts
%%  - Some new large operators (like sum)
%%  - Custom Theorems
%%
%% Options:
%%   [english] - set custom theorem names to english (default is french)
%%
%% Requires: my-preamble.sty
%%
%% Author: Dorian Lesbre
%%
\NeedsTeXFormat{LaTeX2e}[2005/12/01]
\ProvidesPackage{my-math} [2023/02/24 v1.1.0 a lot of math commands]

\RequirePackage{etoolbox}
\RequirePackage{my-preamble}

\newtoggle{english}

\DeclareOption{english}{\toggletrue{english}}

\ProcessOptions\relax

% ==========================
% Math abbrieviations
% ==========================

\newcommand{\N}{\mathbb{N}}
\newcommand{\Z}{\mathbb{Z}}
\newcommand{\Q}{\mathbb{Q}}
\newcommand{\R}{\mathbb{R}}
\newcommand{\C}{\mathbb{C}}
\newcommand{\U}{\mathbb{U}}
\newcommand{\D}{\mathbb{D}}
\newcommand{\K}{\mathbb{K}}
\newcommand{\F}{\mathbb{F}}
\renewcommand{\S}{\mathbb{S}}
\newcommand{\Prob}{\mathbb{P}}
\newcommand{\Esp}{\mathbb{E}}
\newcommand{\V}{\mathbb{V}}

\newcommand{\di}{\mathrm{d}}
\newcommand{\re}{\mathrm{Re}}
\newcommand{\im}{\mathrm{Im}}
\newcommand{\id}{\mathrm{id}}
\newcommand{\gl}{\mathrm{Gl}}
\newcommand{\rg}{\mathrm{rg}}
\newcommand{\tr}{\mathrm{Tr}}
\newcommand{\DL}{\mathrm{DL}}
\newcommand{\Hom}{\mathrm{Hom}}
\newcommand{\com}{\mathrm{Com}}
\renewcommand{\ker}{\mathrm{Ker}}
\newcommand{\vect}{\mathrm{Vect}}
\renewcommand{\th}{\mathrm{Th}}
\newcommand{\card}{\mathrm{Card}}
\newcommand{\ind}{1\!\!1} % indicatrice

\newcommand{\M}{\mathcal{M}}
\newcommand{\orth}{\mathcal{O}}
\newcommand{\sorth}{\mathcal{SO}}
\newcommand{\Div}{\mathcal{D}}

\newcommand{\Lin}{\mathscr{L}}
\newcommand{\Cont}[1][]{\mathscr{C}^{#1}}
\newcommand{\B}{\mathscr{B}}
\newcommand{\E}{\mathscr{E}}

\newcommand{\et}{\text{ et }}
\newcommand{\ou}{\text{ ou }}
\newcommand{\si}{\text{ si }}

\newcommand{\bq}{\bullet \quad}

\newcommand{\transp}{{}^\mathrm{t}\!} % matrix transposition

\newcommand{\set}[1]{\left\lbrace{} #1 \right\rbrace}
\newcommand{\setp}[2]{\left\lbrace{} #1 \,\middle|\, #2 \right\rbrace}
\newcommand{\abs}[1]{\left\lvert{} #1 \right\rvert}
\newcommand{\normv}[1]{\left\Vert{} #1 \right\Vert}
\newcommand{\norm}[1]{\left\Vert{} \overrightarrow{#1} \right\Vert}
\newcommand{\floor}[1]{\left\lfloor{} #1 \right\rfloor}
\newcommand{\ceil}[1]{\left\lceil{} #1 \right\rceil}
\newcommand{\scalar}[2]{\left\langle#1,\,#2\right\rangle}
\newcommand{\intset}[2]{\left\llbracket#1, \: #2 \right\rrbracket}

\newcommand{\limit}[2]{\lim\limits_{#1\: \to\: #2}}
\newcommand{\tendsto}[2]{\xrightarrow[\: #1\: \to\:#2 \:]{}}
\newcommand{\Mat}[2][\mathbb{K}]{\mathcal{M}_{#2}\left(#1\right)}
\newcommand{\matr}[5]{\left(#1\right)_{\substack{1 \leqslant #2 \leqslant #3 \\ 1 \leqslant #4 \leqslant #5}}}

\newcommand{\conj}[1]{\xrightarrow{\quad {\displaystyle \mathscr{#1}} \quad}}
\newcommand{\diff}[2]{\frac{\mathrm{d} #1}{\mathrm{d} #2}}
\newcommand{\pdiff}[2]{\frac{\partial#1}{\partial#2}}
\newcommand{\bigdiff}[2]{\cfrac{\mathrm{d} #1}{\mathrm{d} #2}}

\newcommand{\f}[4]{\begin{array}{ccl}
		#1 \! & \! \rightarrow \! & \! #2 \\
		#3 \! & \! \mapsto \!     & \! #4\end{array}}
\newcommand{\nCr}[2]{\left(\begin{array}{c} #1 \\ #2 \end{array} \right)}
\newcommand{\liste}[3][,\,]{#2 #1 \ldots #1 #3}

% ==========================
% Operators
% ==========================

\DeclareMathOperator*{\bigast}{\text{\Huge{$\ast$}}}
\DeclareMathOperator*{\simop}{\text{\LARGE{$\sim$}}}
\DeclareMathOperator*{\smallo}{o}
\DeclareMathOperator*{\bigO}{\text{\Large{$O$}}}
\DeclareMathOperator*{\eqas}{=}
\DeclareMathOperator*{\argmax}{\text{argmax}}
\DeclareMathOperator*{\argmin}{\text{argmin}}

% ==========================
% Theorems
% ==========================

\newtheoremstyle{custom}
{} % espace au-dessus
{} % espace en-dessous
{\normalfont} % police
{} % indentation
{\bfseries}
{} %Ponctuation
{ } %après la tête
{\thmname{#1}\thmnumber{ #2} : \def\temp{#3}\ifx\temp\empty \else (\thmnote{#3})\fi\newline} %head-spec
\theoremstyle{custom}

\makeatletter
\renewenvironment{proof}[1][\proofname]
{\par\pushQED{\qed}\normalfont\topsep6\p@\@plus6\p@\relax\trivlist\item[\hskip\labelsep\emph{#1 :}]\mbox{}}
{\popQED\endtrivlist\@endpefalse}
\makeatother

\iftoggle{english}{
	\newtheorem{mylemma}{Lemma}[section]
	\newtheorem{proposition}[mylemma]{Proposition}
	\newtheorem{theoreme}[mylemma]{Theorem}
	\newtheorem{probleme}{Problem}[section]
	\newtheorem{methode}{Method}[section]
	\newtheorem{algo}{Algorithm}[section]
	\newtheorem{defini}{Definition}[section]
	\newtheorem{mynotation}[defini]{Notation}
	\newtheorem{exampl}{Example}[section]
}{
	\newtheorem{mylemma}{Lemme}[section]
	\newtheorem{proposition}[mylemma]{Proposition}
	\newtheorem{theoreme}[mylemma]{Théorème}
	\newtheorem{probleme}{Problème}[section]
	\newtheorem{methode}{Méthode}[section]
	\newtheorem{algo}{Algorithme}[section]
	\newtheorem{defini}{Définition}[section]
	\newtheorem{mynotation}[mylemma]{Notation}
	\newtheorem{exampl}{Exemple}[section]
}

% ==========================
% Macro definitions
% ==========================

\newcommand{\spac}{\nobreak\hskip 0.2em plus 0.1em} % a space

\makeatletter
\newcommand{\newsymb}[3][]{
	\ifstrempty{#1}{%
		% symbol without def link
		\expandafter\newcommand\csname#2\endcsname{#3}%
	}{%
		% symbol with def link
		\expandafter\newcommand\csname#2\endcsname{\newlink{def:#1}{#3}}%
	}%
}%
% \newsymb[tgt] {\foo} {bar} -> new macro \foo that prints bar (optionally linking to def:tgt)

\newcommand{\newfunone}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[1]{\csname#2symb\endcsname \left(##1\right)}%
}%
% \newfunone{cmd}{link}{symbol} -> new function taking one argument
% defines two macros:
% - \cmdsymb -> the function name
% - \cmd {arg} -> function call

\newcommand{\newfuntwo}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[2]{\csname#2symb\endcsname \left(##1,\spac##2\right)}%
}%
% \newfuntwo{cmd}{link}{symbol} -> new function taking two arguments
% defines two macros:
% - \cmdsymb -> the function name
% - \cmd x y -> function call

\newcommand{\newfunthree}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[3]{\csname#2symb\endcsname \left(##1,\spac##2,\spac##3\right)}%
}%
% \newfuntwo{cmd}{link}{symbol} -> new function taking three arguments
% defines two macros:
% - \cmdsymb -> the function name
% - \cmd x y z -> function call

\newcommand{\newfunfour}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[2]{\csname#2symb\endcsname \left(##1,\spac##2,\spac##3,\spac##4\right)}%
}%
% \newfuntwo{cmd}{link}{symbol} -> new function taking four arguments
% defines two macros:
% - \cmdsymb -> the function name
% - \cmd x y z t -> function call

\newcommand{\newinfix}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[2]{##1 \mathbin{\csname#2symb\endcsname} ##2}%
}%
% \newinfix{cmd}{link}{symbol} -> new infix operator
% defines two macros:
% - \cmdsymb -> the function name
% - \cmd x y -> function call

\newcommand{\newinfixrel}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[2]{##1 \mathrel{\csname#2symb\endcsname} ##2}%
}%
% Same as new infix but with bigger space (for relations, not binary operators)

\newcommand{\newlamone}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[1]{\csname#2symb\endcsname\spac##1}%
}%
% \newlamone{cmd}{link}{symbol} -> same as newfunone but uses OCaml style syntax for function calls

\newcommand{\newlamtwo}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[2]{\csname#2symb\endcsname\spac##1\spac##2}%
}%
% \newlamtwo{cmd}{link}{symbol} -> same as newfuntwo but uses OCaml style syntax for function calls

\newcommand{\newlamthree}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[3]{\csname#2symb\endcsname\spac##1\spac##2\spac##3}%
}%
% \newlamthree{cmd}{link}{symbol} -> same as newfunthree but uses OCaml style syntax for function calls

\newcommand{\newlamfour}[3][]{%
	\newsymb[#1]{#2symb}{#3}%
	\expandafter\newcommand\csname#2\endcsname[2]{\csname#2symb\endcsname\spac##1\spac##2\spac##3\spac##4}%
}%
% \newlamfour{cmd}{link}{symbol} -> same as newfunfour but uses OCaml style syntax for function calls

\makeatother

\endinput

%% End of file my-math.sty
